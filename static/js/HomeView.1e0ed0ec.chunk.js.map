{"version":3,"sources":["components/PageHeading/PageHeading.module.css","components/ProductList/ProductList.module.css","pages/HomeView.module.css","../node_modules/random-int/index.js","components/PageHeading/PageHeading.jsx","components/ProductList/ProductList.jsx","components/AddButton/AddButton.jsx","pages/HomeView.jsx"],"names":["module","exports","randomInteger","minimum","maximum","undefined","TypeError","Math","floor","random","PageHeading","text","className","s","title","ProductList","products","useSelector","state","useState","showModal","setShowModal","modalId","setModalId","dispatch","useDispatch","openModal","e","Number","target","id","toggleModal","listGrid","productsReducer","map","name","price","image_link","description","listItem","to","src","alt","button","type","onClick","Modal","buttonContainer","removeButton","deleteProductAction","cancelButton","AddButton","HomeView","image","setImage","setPrice","setDescription","label","setLabel","useEffect","length","fetchProducts","onChange","console","log","value","sortByPrice","sortByName","modalForm","onSubmit","preventDefault","product","addProduct","modalLabel","modalInput","autoFocus","placeholder","required","descriptionInput","modalButtonContainer","modalButton"],"mappings":"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","file":"static/js/HomeView.1e0ed0ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageHeading_title__V7haU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listGrid\":\"ProductList_listGrid__3_NDf\",\"listItem\":\"ProductList_listItem__1SiHf\",\"button\":\"ProductList_button__3PCsU\",\"buttonContainer\":\"ProductList_buttonContainer__1AIu_\",\"removeButton\":\"ProductList_removeButton__2Hi38\",\"cancelButton\":\"ProductList_cancelButton__3fY7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalForm\":\"HomeView_modalForm__2OJCP\",\"modalLabel\":\"HomeView_modalLabel__3B22S\",\"modalInput\":\"HomeView_modalInput__jW2uO\",\"descriptionInput\":\"HomeView_descriptionInput__UOKHA\",\"modalButtonContainer\":\"HomeView_modalButtonContainer__2XLGh\",\"modalButton\":\"HomeView_modalButton__3K6i_\"};","export default function randomInteger(minimum, maximum) {\n\tif (maximum === undefined) {\n\t\tmaximum = minimum;\n\t\tminimum = 0;\n\t}\n\n\tif (typeof minimum !== 'number' || typeof maximum !== 'number') {\n\t\tthrow new TypeError('Expected all arguments to be numbers');\n\t}\n\n\treturn Math.floor(\n\t\t(Math.random() * (maximum - minimum + 1)) + minimum\n\t);\n}\n","import s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { deleteProduct as deleteProductAction } from 'store/actions/products';\nimport s from './ProductList.module.css';\nimport Modal from 'components/Modal/Modal';\n\nexport default function ProductList() {\n  const products = useSelector(state => state.products);\n  const [showModal, setShowModal] = useState(false);\n  const [modalId, setModalId] = useState(0);\n\n  const dispatch = useDispatch();\n\n  const openModal = e => {\n    setShowModal(!showModal);\n    setModalId(Number(e.target.id));\n  };\n\n  const toggleModal = e => {\n    setShowModal(!showModal);\n  };\n\n  const deleteProduct = e => {\n    toggleModal();\n    dispatch(deleteProductAction(modalId));\n  };\n\n  return (\n    <>\n      <ul className={s.listGrid}>\n        {products.productsReducer &&\n          products.productsReducer.map(\n            ({ id, name, price, image_link, description }) => {\n              return (\n                <li className={s.listItem} key={id}>\n                  <Link to={`/product/${id}`}>\n                    <h3>{name}</h3>\n                    <img src={image_link} alt={name} />\n                  </Link>\n                  <p>\n                    <span>Price :{price}</span>\n                  </p>\n                  <p>\n                    <span>Description:</span>\n                    <br />\n                    {description}\n                  </p>\n\n                  <button\n                    className={s.button}\n                    type=\"button\"\n                    id={id}\n                    onClick={openModal}\n                  >\n                    Remove\n                  </button>\n                </li>\n              );\n            },\n          )}\n      </ul>\n      {showModal && (\n        <Modal>\n          <div className={s.buttonContainer}>\n            <button\n              className={s.removeButton}\n              type=\"button\"\n              onClick={deleteProduct}\n            >\n              Delete item\n            </button>\n            <button\n              className={s.cancelButton}\n              type=\"button\"\n              onClick={toggleModal}\n            >\n              Cancel\n            </button>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n","export default function AddButton({ onClick, text }) {\n  return (\n    <button type=\"button\" onClick={onClick}>\n      {text}\n    </button>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport randomInteger from 'random-int';\n\nimport PageHeading from '../components/PageHeading/PageHeading';\nimport ProductList from 'components/ProductList/ProductList';\nimport AddButton from 'components/AddButton/AddButton';\nimport Modal from 'components/Modal/Modal';\nimport { addProduct, sortByName, sortByPrice } from 'store/actions/products';\nimport { fetchProducts } from '../store/actions/productsOperations';\nimport s from './HomeView.module.css';\n\nexport default function HomeView() {\n  const products = useSelector(state => state.products);\n  const [showModal, setShowModal] = useState(false);\n  const [image, setImage] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [label, setLabel] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (products.productsReducer.length > 0) {\n      return;\n    }\n    dispatch(fetchProducts());\n    return () => {};\n  }, []);\n\n  const modalSubmit = e => {\n    e.preventDefault();\n    const product = {\n      id: randomInteger(1000, 20000),\n      image_link: image,\n      name: label,\n      description: description,\n      price: price,\n    };\n    dispatch(addProduct(product));\n\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n    setImage('');\n    setPrice('');\n    setImage('');\n    setLabel('');\n    setDescription('');\n  };\n\n  const selectChange = e => {\n    console.log(e.target.value);\n    if (e.target.value === 'alphabet') {\n      dispatch(sortByName());\n      return;\n    }\n    if (e.target.value === 'price') {\n      dispatch(sortByPrice());\n    }\n  };\n\n  return (\n    <>\n      <PageHeading text=\"Product list\" />\n      <AddButton onClick={toggleModal} text=\"Add product\" />\n      <select onChange={selectChange}>\n        <option value=\"alphabet\">Alphabet</option>\n        <option value=\"price\">Price</option>\n      </select>\n      <ProductList />\n\n      {showModal && (\n        <Modal>\n          <form className={s.modalForm} onSubmit={modalSubmit}>\n            <label className={s.modalLabel}>\n              Name\n              <input\n                className={s.modalInput}\n                type=\"text\"\n                autoFocus\n                placeholder=\"Name\"\n                value={label}\n                required\n                onChange={e => setLabel(e.target.value)}\n              />\n            </label>\n            <label className={s.modalLabel}>\n              Image URL\n              <input\n                className={s.modalInput}\n                type=\"url\"\n                autoFocus\n                placeholder=\"Enter image url\"\n                value={image}\n                required\n                onChange={e => setImage(e.target.value)}\n              />\n            </label>\n            <label className={s.modalLabel}>\n              Price\n              <input\n                className={s.modalInput}\n                type=\"number\"\n                autoFocus\n                placeholder=\"Price\"\n                value={price}\n                required\n                onChange={e => setPrice(e.target.value)}\n              />\n            </label>\n            <label className={s.modalLabel}>\n              Description\n              <input\n                className={s.descriptionInput}\n                type=\"text\"\n                autoFocus\n                placeholder=\"Description\"\n                value={description}\n                required\n                onChange={e => setDescription(e.target.value)}\n              />\n            </label>\n            <div className={s.modalButtonContainer}>\n              <button type=\"submit\" className={s.modalButton}>\n                <span>Add product</span>\n              </button>\n              <button\n                type=\"button\"\n                className={s.modalButton}\n                onClick={toggleModal}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </Modal>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}